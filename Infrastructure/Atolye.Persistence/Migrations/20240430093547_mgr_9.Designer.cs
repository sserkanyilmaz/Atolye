// <auto-generated />
using System;
using Atolye.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Atolye.Persistence.Migrations
{
    [DbContext(typeof(AtolyeDbContext))]
    [Migration("20240430093547_mgr_9")]
    partial class mgr9
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Atolye.Domain.Entities.ActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.HasIndex("PersonId");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Base", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FixtureInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("FixtureInformationId");

                    b.ToTable("Bases");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.BaseNew", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CareerStuffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("news")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.HasIndex("CareerStuffId");

                    b.ToTable("BaseNew");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.CareerStuff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CareerStuffs");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.EngineerOfTheMonth", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AchievementDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Month")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("EngineersOfTheMonths");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.FixtureInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FixtureInformations");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CareerStuffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SliderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("URl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.HasIndex("CareerStuffId");

                    b.HasIndex("SliderId");

                    b.HasIndex("TeamId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Inventories");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Inventory");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FathersSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFatherAlive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFatherRetired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMotherAlive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMotherRetired")
                        .HasColumnType("bit");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MothersSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique()
                        .HasFilter("[TeamId] IS NOT NULL");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Slider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Achievements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.ConsumableInventory", b =>
                {
                    b.HasBaseType("Atolye.Domain.Entities.Inventory");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TeamId");

                    b.HasDiscriminator().HasValue("ConsumableInventory");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.FixtureInventory", b =>
                {
                    b.HasBaseType("Atolye.Domain.Entities.Inventory");

                    b.Property<Guid?>("BaseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("BaseId");

                    b.HasDiscriminator().HasValue("FixtureInventory");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.ActivityLog", b =>
                {
                    b.HasOne("Atolye.Domain.Entities.Base", null)
                        .WithMany("ActivityLogs")
                        .HasForeignKey("BaseId");

                    b.HasOne("Atolye.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Base", b =>
                {
                    b.HasOne("Atolye.Domain.Entities.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("Atolye.Domain.Entities.FixtureInformation", "FixtureInformation")
                        .WithMany()
                        .HasForeignKey("FixtureInformationId");

                    b.Navigation("Contact");

                    b.Navigation("FixtureInformation");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.BaseNew", b =>
                {
                    b.HasOne("Atolye.Domain.Entities.Base", null)
                        .WithMany("BaseNews")
                        .HasForeignKey("BaseId");

                    b.HasOne("Atolye.Domain.Entities.CareerStuff", null)
                        .WithMany("News")
                        .HasForeignKey("CareerStuffId");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.EngineerOfTheMonth", b =>
                {
                    b.HasOne("Atolye.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Image", b =>
                {
                    b.HasOne("Atolye.Domain.Entities.Base", null)
                        .WithMany("Images")
                        .HasForeignKey("BaseId");

                    b.HasOne("Atolye.Domain.Entities.CareerStuff", null)
                        .WithMany("Images")
                        .HasForeignKey("CareerStuffId");

                    b.HasOne("Atolye.Domain.Entities.Slider", null)
                        .WithMany("Images")
                        .HasForeignKey("SliderId");

                    b.HasOne("Atolye.Domain.Entities.Team", null)
                        .WithMany("Images")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Person", b =>
                {
                    b.HasOne("Atolye.Domain.Entities.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Project", b =>
                {
                    b.HasOne("Atolye.Domain.Entities.Team", "Team")
                        .WithOne("Project")
                        .HasForeignKey("Atolye.Domain.Entities.Project", "TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Report", b =>
                {
                    b.HasOne("Atolye.Domain.Entities.Team", "Team")
                        .WithMany("Reports")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Team", b =>
                {
                    b.HasOne("Atolye.Domain.Entities.Base", null)
                        .WithMany("Teams")
                        .HasForeignKey("BaseId");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.ConsumableInventory", b =>
                {
                    b.HasOne("Atolye.Domain.Entities.Team", "Team")
                        .WithMany("ConsumableInventory")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.FixtureInventory", b =>
                {
                    b.HasOne("Atolye.Domain.Entities.Base", null)
                        .WithMany("fixtureInventories")
                        .HasForeignKey("BaseId");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Base", b =>
                {
                    b.Navigation("ActivityLogs");

                    b.Navigation("BaseNews");

                    b.Navigation("Images");

                    b.Navigation("Teams");

                    b.Navigation("fixtureInventories");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.CareerStuff", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("News");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Slider", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Atolye.Domain.Entities.Team", b =>
                {
                    b.Navigation("ConsumableInventory");

                    b.Navigation("Images");

                    b.Navigation("Members");

                    b.Navigation("Project");

                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
